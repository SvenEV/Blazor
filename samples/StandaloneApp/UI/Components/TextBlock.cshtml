@using Microsoft.AspNetCore.Blazor.Browser.Interop

@inherits StandaloneApp.UI.UIElement

<div style="@LayoutCss @StyleString">
    @Text
</div>

@functions{

    public string Foreground { get; set; } = "black";

    public string FontFamily { get; set; } = "Segoe UI";

    public double FontSize { get; set; } = 15;

    public FontWeight FontWeight { get; set; } = FontWeight.Normal;

    public FontStyle FontStyle { get; set; } = FontStyle.Normal;

    public string Text { get; set; }

    protected override Point MeasureOverride(Point availableSize)
    {
        if (Text == null)
            return Point.Zero;

        // TODO: Take Width/Height/MinMaxSize into account
        var sizeString = RegisteredFunction.Invoke<string>("measureHtml", $"<div style=\"{StyleString}\">{Text}</div>");
        var sizeParts = sizeString.Split(',');
        var size = new Point(
            Math.Ceiling(double.Parse(sizeParts[0])) + 1,
            Math.Ceiling(double.Parse(sizeParts[1])) + 1);

        UILog.Write("TEXT", $"Measured a size of {size} for text '{Text}'");

        return size;
    }

    private string StyleString =>
        $"font-family: {FontFamily}; font-size: {FontSize}px; color: {Foreground};" +
        $"font-weight: {(int)FontWeight};" +
        $"font-style: {FontStyle.ToString().ToLower()}";
}